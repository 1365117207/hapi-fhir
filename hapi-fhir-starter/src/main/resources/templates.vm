##################################################################
## childVars
##################################################################

#macro ( childVars $childElements )
#foreach ( $child in $children )
#if ($child.resourceRef) 
	@Child(name="${child.elementNameSimplified}", order=${foreach.index}, min=${child.cardMin}, max=${child.cardMaxForChildAnnotation})
	@ChildResource(types= {
#foreach ($nextType in ${child.type})
		${nextType}.class,
#end
	})	
#elseif ($!child.hasMultipleTypes)
	@Child(name="${child.elementNameSimplified}", order=${foreach.index}, min=${child.cardMin}, max=${child.cardMaxForChildAnnotation}, choice=@Choice(types= {
#foreach ($nextType in ${child.referenceTypesForMultiple})
		${nextType}.class,
#end
	}))	
#elseif ($!child.block)
	@Child(name="${child.elementNameSimplified}", order=${foreach.index}, min=${child.cardMin}, max=${child.cardMaxForChildAnnotation})	
#else
	@Child(name="${child.elementNameSimplified}", type=${child.annotationType}.class, order=${foreach.index}, min=${child.cardMin}, max=${child.cardMaxForChildAnnotation})	
#end
	private ${child.referenceType} ${child.variableName};
	
#end
#end


##################################################################
## childAccessors
##################################################################

#macro ( childAccessors $childElements )
#foreach ( $child in $children )
	/**
	 * Gets the value(s) for ${child.elementName} (${child.shortName})
	 *
     * <p>
     * <b>Definition:</b>
     * ${child.definition}
     * </p> 
	 */
	public ${child.referenceType} get${child.methodName}() {
		return ${child.variableName};
	}

	/**
	 * Sets the value(s) for ${child.elementName} (${child.shortName})
	 *
     * <p>
     * <b>Definition:</b>
     * ${child.definition}
     * </p> 
	 */
	public void set${child.methodName}(${child.referenceType} theValue) {
		${child.variableName} = theValue;
	}
	
#end
#end

##################################################################
## childExtensionFields
##################################################################

#macro ( childExtensionFields $childExtensionTypes )
#foreach ( $extensionType in $childExtensionTypes )
	@Child(name="$extensionType.name", type=${extensionType.annotationType}.class, order=${foreach.index}, min=${extensionType.cardMin}, max=${extensionType.cardMaxForChildAnnotation})
	@Extension(url="${extensionType.url}") 
	private ${extensionType.referenceType} ${extensionType.variableName};

#end
#end


##################################################################
## childExtensionTypes
##################################################################

#macro ( childExtensionTypes $childExtensionTypes )
#foreach ( $extensionType in $childExtensionTypes )
#if ( $extensionType.hasChildExtensions )
	@Block(name="${extensionType.name}")
	public static class ${extensionType.nameType} implements IExtension {
		
#foreach ( $childExtensionSubtype in $extensionType.childExtensions )		
		@Child(name="$childExtensionSubtype.name", type=${childExtensionSubtype.annotationType}.class, order=${foreach.index}, min=${childExtensionSubtype.cardMin}, max=${childExtensionSubtype.cardMaxForChildAnnotation})
		@Extension(url="${childExtensionSubtype.url}") 
		private ${childExtensionSubtype.referenceType} ${childExtensionSubtype.variableName};

#end


	}
	
#foreach ( $extensionSubType in $extensionTypes.childExtensionsWithChildren )
#childExtensionTypes( $extensionSubType )
#end
#end
#end
#end


