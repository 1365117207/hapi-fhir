#parse ( "/vm/templates.vm" )

package ${packageBase}.resource;


import java.util.*;
import ca.uhn.fhir.model.api.*;
import ca.uhn.fhir.model.api.annotation.*;

#foreach ( $import in $imports )
import ${import};
#end

##import ${packageBase}.composite.*;
##import ${packageBase}.valueset.*;

/**
 * HAPI/FHIR <b>${className}</b> Resource
 * (${shortName})
 *
 * <p>
 * <b>Definition:</b>
 * ${definition}
 * </p> 
 *
 * <p>
 * <b>Requirements:</b>
 * ${requirements}
 * </p> 
 *
#if (${profile} != "")
 * <p>
 * <b>Profile Definition:</b>
 * <a href="${profile}">${profile}</a> 
 * </p>
 *
#end
 */
@ResourceDef(name="${className}", profile="${profile}", id="${id}")
public class ${className} extends BaseResource implements IResource {

#foreach ( $param in $searchParams )
	/**
	 * Search parameter constant for <b>${param.name}</b>
	 * <p>
	 * Description: <b>${param.description}</b><br/>
	 * Type: <b>${param.type}</b><br/>
	 * Path: <b>${param.path}</b><br/>
	 * </p>
	 */
	@SearchParamDefinition(name="${param.name}", path="${param.path}", description="${param.description}")
	public static final String $param.constantName = "${param.name}";

#end

#childExtensionFields( $childExtensionTypes )
#childVars( $children )
#childAccessors( $children )
#childResourceBlocks($resourceBlockChildren)

#childExtensionTypes( $childExtensionTypes )

}